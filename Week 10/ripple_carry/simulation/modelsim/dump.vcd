$date
	Thu Nov 12 14:27:56 2020
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module ripple_carry_testbench $end
$var reg 16 ! in1 [15:0] $end
$var reg 16 " in2 [15:0] $end
$var wire 1 # out [15] $end
$var wire 1 $ out [14] $end
$var wire 1 % out [13] $end
$var wire 1 & out [12] $end
$var wire 1 ' out [11] $end
$var wire 1 ( out [10] $end
$var wire 1 ) out [9] $end
$var wire 1 * out [8] $end
$var wire 1 + out [7] $end
$var wire 1 , out [6] $end
$var wire 1 - out [5] $end
$var wire 1 . out [4] $end
$var wire 1 / out [3] $end
$var wire 1 0 out [2] $end
$var wire 1 1 out [1] $end
$var wire 1 2 out [0] $end
$var wire 1 3 overflow $end

$scope module rc $end
$var wire 1 4 in1 [15] $end
$var wire 1 5 in1 [14] $end
$var wire 1 6 in1 [13] $end
$var wire 1 7 in1 [12] $end
$var wire 1 8 in1 [11] $end
$var wire 1 9 in1 [10] $end
$var wire 1 : in1 [9] $end
$var wire 1 ; in1 [8] $end
$var wire 1 < in1 [7] $end
$var wire 1 = in1 [6] $end
$var wire 1 > in1 [5] $end
$var wire 1 ? in1 [4] $end
$var wire 1 @ in1 [3] $end
$var wire 1 A in1 [2] $end
$var wire 1 B in1 [1] $end
$var wire 1 C in1 [0] $end
$var wire 1 D in2 [15] $end
$var wire 1 E in2 [14] $end
$var wire 1 F in2 [13] $end
$var wire 1 G in2 [12] $end
$var wire 1 H in2 [11] $end
$var wire 1 I in2 [10] $end
$var wire 1 J in2 [9] $end
$var wire 1 K in2 [8] $end
$var wire 1 L in2 [7] $end
$var wire 1 M in2 [6] $end
$var wire 1 N in2 [5] $end
$var wire 1 O in2 [4] $end
$var wire 1 P in2 [3] $end
$var wire 1 Q in2 [2] $end
$var wire 1 R in2 [1] $end
$var wire 1 S in2 [0] $end
$var wire 1 # out [15] $end
$var wire 1 $ out [14] $end
$var wire 1 % out [13] $end
$var wire 1 & out [12] $end
$var wire 1 ' out [11] $end
$var wire 1 ( out [10] $end
$var wire 1 ) out [9] $end
$var wire 1 * out [8] $end
$var wire 1 + out [7] $end
$var wire 1 , out [6] $end
$var wire 1 - out [5] $end
$var wire 1 . out [4] $end
$var wire 1 / out [3] $end
$var wire 1 0 out [2] $end
$var wire 1 1 out [1] $end
$var wire 1 2 out [0] $end
$var wire 1 3 overflow $end
$var wire 1 T carry_bit [15] $end
$var wire 1 U carry_bit [14] $end
$var wire 1 V carry_bit [13] $end
$var wire 1 W carry_bit [12] $end
$var wire 1 X carry_bit [11] $end
$var wire 1 Y carry_bit [10] $end
$var wire 1 Z carry_bit [9] $end
$var wire 1 [ carry_bit [8] $end
$var wire 1 \ carry_bit [7] $end
$var wire 1 ] carry_bit [6] $end
$var wire 1 ^ carry_bit [5] $end
$var wire 1 _ carry_bit [4] $end
$var wire 1 ` carry_bit [3] $end
$var wire 1 a carry_bit [2] $end
$var wire 1 b carry_bit [1] $end
$var wire 1 c carry_bit [0] $end

$scope begin block_name[14] $end
$var parameter 32 d i $end

$scope module fa $end
$var wire 1 5 x $end
$var wire 1 E y $end
$var wire 1 V carry_in $end
$var wire 1 $ result $end
$var wire 1 U carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[13] $end
$var parameter 32 e i $end

$scope module fa $end
$var wire 1 6 x $end
$var wire 1 F y $end
$var wire 1 W carry_in $end
$var wire 1 % result $end
$var wire 1 V carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[12] $end
$var parameter 32 f i $end

$scope module fa $end
$var wire 1 7 x $end
$var wire 1 G y $end
$var wire 1 X carry_in $end
$var wire 1 & result $end
$var wire 1 W carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[11] $end
$var parameter 32 g i $end

$scope module fa $end
$var wire 1 8 x $end
$var wire 1 H y $end
$var wire 1 Y carry_in $end
$var wire 1 ' result $end
$var wire 1 X carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[10] $end
$var parameter 32 h i $end

$scope module fa $end
$var wire 1 9 x $end
$var wire 1 I y $end
$var wire 1 Z carry_in $end
$var wire 1 ( result $end
$var wire 1 Y carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[9] $end
$var parameter 32 i i $end

$scope module fa $end
$var wire 1 : x $end
$var wire 1 J y $end
$var wire 1 [ carry_in $end
$var wire 1 ) result $end
$var wire 1 Z carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[8] $end
$var parameter 32 j i $end

$scope module fa $end
$var wire 1 ; x $end
$var wire 1 K y $end
$var wire 1 \ carry_in $end
$var wire 1 * result $end
$var wire 1 [ carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[7] $end
$var parameter 32 k i $end

$scope module fa $end
$var wire 1 < x $end
$var wire 1 L y $end
$var wire 1 ] carry_in $end
$var wire 1 + result $end
$var wire 1 \ carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[6] $end
$var parameter 32 l i $end

$scope module fa $end
$var wire 1 = x $end
$var wire 1 M y $end
$var wire 1 ^ carry_in $end
$var wire 1 , result $end
$var wire 1 ] carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[5] $end
$var parameter 32 m i $end

$scope module fa $end
$var wire 1 > x $end
$var wire 1 N y $end
$var wire 1 _ carry_in $end
$var wire 1 - result $end
$var wire 1 ^ carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[4] $end
$var parameter 32 n i $end

$scope module fa $end
$var wire 1 ? x $end
$var wire 1 O y $end
$var wire 1 ` carry_in $end
$var wire 1 . result $end
$var wire 1 _ carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[3] $end
$var parameter 32 o i $end

$scope module fa $end
$var wire 1 @ x $end
$var wire 1 P y $end
$var wire 1 a carry_in $end
$var wire 1 / result $end
$var wire 1 ` carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[2] $end
$var parameter 32 p i $end

$scope module fa $end
$var wire 1 A x $end
$var wire 1 Q y $end
$var wire 1 b carry_in $end
$var wire 1 0 result $end
$var wire 1 a carry_out $end
$upscope $end
$upscope $end

$scope begin block_name[1] $end
$var parameter 32 q i $end

$scope module fa $end
$var wire 1 B x $end
$var wire 1 R y $end
$var wire 1 c carry_in $end
$var wire 1 1 result $end
$var wire 1 b carry_out $end
$upscope $end
$upscope $end

$scope module ha $end
$var wire 1 C x $end
$var wire 1 S y $end
$var wire 1 2 result $end
$var wire 1 c carry $end
$upscope $end

$scope module fa $end
$var wire 1 4 x $end
$var wire 1 D y $end
$var wire 1 U carry_in $end
$var wire 1 # result $end
$var wire 1 3 carry_out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b0 "
b1 q
b10 p
b11 o
b100 n
b101 m
b110 l
b111 k
b1000 j
b1001 i
b1010 h
b1011 g
b1100 f
b1101 e
b1110 d
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
03
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
zT
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
$end
#5
b1 !
1C
12
#10
b1 "
1S
02
1c
11
#15
b10 !
0C
1B
01
1b
12
0c
11
0b
#20
b11000111 !
b1100001 "
1N
1M
1C
1A
1=
1<
1+
1]
10
02
1c
1-
01
1b
0+
1\
1*
00
1a
1/
#25
b10000001 !
b0 "
0S
0N
0M
0B
0A
0=
10
0a
11
0b
0]
0-
12
0c
01
1+
0\
00
0/
0*
#30
b1111111111111111 !
b1111111111111111 "
1S
1R
1Q
1P
1O
1N
1M
1L
1K
1J
1I
1H
1G
1F
1E
1D
1B
1A
1@
1?
1>
1=
1;
1:
19
18
17
16
15
14
13
1U
1V
1W
1X
1Y
1Z
1[
1]
1^
1_
1`
1a
1b
1#
1$
1%
1&
1'
1(
1)
1\
1,
1-
1.
1/
10
02
1c
11
1*
#35
b1 "
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
#40
b0 "
0S
12
0c
11
0b
10
0a
1/
0`
1.
0_
1-
0^
1,
0]
1+
0\
1*
0[
1)
0Z
1(
0Y
1'
0X
1&
0W
1%
0V
1$
0U
1#
03
